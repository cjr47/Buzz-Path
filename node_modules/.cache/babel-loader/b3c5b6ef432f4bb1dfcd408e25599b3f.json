{"ast":null,"code":"var _jsxFileName = \"/Users/chris/momentum/Buzz-Path/react_buzz_path/buzzed_react/src/components/map.js\",\n    _s = $RefreshSig$();\n\nimport { useLoadScript, GoogleMap, Autocomplete, DirectionsRenderer } from \"@react-google-maps/api\";\nimport React, { useState, useRef } from 'react';\nimport \"./maps.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = {\n  lat: 35.9940,\n  lng: 78.8986\n};\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100vw\",\n  height: \"100vh\"\n};\nconst [map, setMap] = useState(null);\nconst [directionsResponse, setDirectionsResponse] = useState(null);\nconst [distance, setDistance] = useState('');\nconst [duration, setDuration] = useState('');\nconst originRef = useRef();\nconst destinationRef = useRef();\nexport default function Gmap() {\n  _s();\n\n  const {\n    isLoaded,\n    loaderror\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  if (loaderror) return \"Where's my Coffee!! - be\";\n  if (!isLoaded) return \"Finding your coffee\";\n  const [map, setMap] = useState(null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const originRef = useRef();\n  const destinationRef = useRef();\n\n  async function calculatePath() {\n    if (originRef.current.value == '' || destinationRef.current.value === '') {\n      return;\n    }\n\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      start: originRef.currentValue,\n      destination: destinationRef.current.value,\n      travelMode: google.maps.TravelMode.DRIVING\n    });\n    setDirectionsResponse(results);\n    setDistance(results.routes[0].legs[0].distance.text);\n    setDuration(results.routes[0].legs[0].duration.text);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coffeemap\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 15,\n      center: center\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Gmap, \"TnxtzLtUszKAId235vGgDnLX6LY=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Gmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"sources":["/Users/chris/momentum/Buzz-Path/react_buzz_path/buzzed_react/src/components/map.js"],"names":["useLoadScript","GoogleMap","Autocomplete","DirectionsRenderer","React","useState","useRef","center","lat","lng","libraries","mapContainerStyle","width","height","map","setMap","directionsResponse","setDirectionsResponse","distance","setDistance","duration","setDuration","originRef","destinationRef","Gmap","isLoaded","loaderror","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","calculatePath","current","value","directionsService","google","maps","DirectionsService","results","route","start","currentValue","destination","travelMode","TravelMode","DRIVING","routes","legs","text"],"mappings":"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","sourcesContent":["import {\n  useLoadScript,\n  GoogleMap,\n  Autocomplete,\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\nimport React, { useState, useRef } from 'react'\nimport \"./maps.css\"\n\n\nconst center = {lat: 35.9940,lng: 78.8986}\nconst libraries = [\"places\"]\nconst mapContainerStyle = {\n    width: \"100vw\",\n    height: \"100vh\",\n}\n        const [map, setMap] = useState(null)\n        const [directionsResponse, setDirectionsResponse] = useState(null)\n        const [distance, setDistance] = useState('')\n        const [duration, setDuration] = useState('');\n\n        const originRef = useRef()\n        const destinationRef = useRef()\n\nexport default function Gmap () {\n    \n    const { isLoaded, loaderror } = useLoadScript({\n          googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n          libraries,\n        });\n    if (loaderror) return \"Where's my Coffee!! - be\";\n    if(!isLoaded) return \"Finding your coffee\";\n    \n            const [map, setMap] = useState(null);\n            const [directionsResponse, setDirectionsResponse] = useState(null);\n            const [distance, setDistance] = useState(\"\");\n            const [duration, setDuration] = useState(\"\");\n\n            const originRef = useRef();\n            const destinationRef = useRef();\n\n\n    async function calculatePath(){\n        if (originRef.current.value == '' || destinationRef.current.value === ''){\n            return\n        }\n        const directionsService = new google.maps.DirectionsService()\n        const results = await directionsService.route({\n            start: originRef.currentValue,\n            destination: destinationRef.current.value,\n            travelMode: google.maps.TravelMode.DRIVING,\n        })\n        setDirectionsResponse(results)\n        setDistance(results.routes[0].legs[0].distance.text)\n        setDuration(results.routes[0].legs[0].duration.text);\n\n    }\nreturn (\n    <div className =\"coffeemap\">\n         <GoogleMap \n            mapContainerStyle={mapContainerStyle}\n            zoom={15}\n            center={center}\n        ></GoogleMap>\n    </div>\n);\n}"]},"metadata":{},"sourceType":"module"}