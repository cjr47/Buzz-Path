{"ast":null,"code":"var _jsxFileName = \"/Users/chris/momentum/final-project/src/components/map.js\",\n    _s = $RefreshSig$();\n\nimport { useLoadScript, GoogleMap, Autocomplete, DirectionsRenderer, Marker } from \"@react-google-maps/api\";\nimport React, { useState, useRef } from 'react';\nimport \"./maps.css\";\nimport CoffeeDistance from \"./coffeestops\";\nimport rangeRef from \"./coffeeslider.js\";\n/* import rangeValue from './slidervalue.js' */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = {\n  lat: 35.9940,\n  lng: -78.8986\n};\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  overflow: \"visible\",\n  resetBoundsOnResize: \"true\"\n};\nexport default function Gmap() {\n  _s();\n\n  const [map, setMap] = useState(null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const originRef = useRef();\n  const destinationRef = useRef();\n  const {\n    isLoaded,\n    loaderror\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  if (loaderror) return \"Where's my Coffee!! - be\";\n  if (!isLoaded) return \"Finding your coffee\";\n  const distCoffee = distance.slice(0, -2);\n  const intCoffee = Number(\"distCoffee\");\n  console.log(typeof intCoffee);\n  console.log(intCoffee);\n  console.log(typeof handleChange);\n  const coffeeDistance = {\n    intCoffee\n  } / ({\n    handleChange\n  } + 1);\n\n  async function coffeeStops() {\n    await calculatePath;\n\n    if (distance > 0) {\n      return coffeeDistance;\n      console.log({\n        distance\n      });\n      console.log(coffeeDistance);\n    }\n  }\n\n  async function calculatePath() {\n    if (originRef.current.value === '' || destinationRef.current.value === '') {\n      return;\n    } // eslint-disable-next-line no-undef\n\n\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originRef.current.value,\n      destination: destinationRef.current.value,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING\n    });\n    setDirectionsResponse(results);\n    setDistance(results.routes[0].legs[0].distance.text);\n    setDuration(results.routes[0].legs[0].duration.text);\n    console.log(coffeeDistance);\n    console.log(typeof distance);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Origin\",\n          ref: originRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Destination\",\n          ref: destinationRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: calculatePath,\n        children: \"Find your Buzzed Path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance: \", distance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coffeemap\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        zoom: 8,\n        center: center,\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: center\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 8\n        }, this), directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directionsResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Gmap, \"FqN0uWkpgi9vCILvTx3USBdz/XM=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Gmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"sources":["/Users/chris/momentum/final-project/src/components/map.js"],"names":["useLoadScript","GoogleMap","Autocomplete","DirectionsRenderer","Marker","React","useState","useRef","CoffeeDistance","rangeRef","center","lat","lng","libraries","mapContainerStyle","width","height","overflow","resetBoundsOnResize","Gmap","map","setMap","directionsResponse","setDirectionsResponse","distance","setDistance","duration","setDuration","originRef","destinationRef","isLoaded","loaderror","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","distCoffee","slice","intCoffee","Number","console","log","handleChange","coffeeDistance","coffeeStops","calculatePath","current","value","directionsService","google","maps","DirectionsService","results","route","origin","destination","travelMode","TravelMode","DRIVING","routes","legs","text"],"mappings":"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","sourcesContent":["import {\n  useLoadScript,\n  GoogleMap,\n  Autocomplete,\n  DirectionsRenderer,\n  Marker,\n} from \"@react-google-maps/api\";\nimport React, { useState, useRef } from 'react'\nimport \"./maps.css\"\nimport CoffeeDistance from \"./coffeestops\";\nimport rangeRef from \"./coffeeslider.js\"\n/* import rangeValue from './slidervalue.js' */\n\n\n\nconst center = {lat: 35.9940,lng: -78.8986}\nconst libraries = [\"places\"]\nconst mapContainerStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"visible\",\n    resetBoundsOnResize: \"true\",\n}\n\n\nexport default function Gmap () {\n    \n                const [map, setMap] = useState(null);\n                const [directionsResponse, setDirectionsResponse] =\n                  useState(null);\n                const [distance, setDistance] = useState(\"\");\n                const [duration, setDuration] = useState(\"\");\n                \n                \n                const originRef = useRef();\n                const destinationRef = useRef();\n    const { isLoaded, loaderror } = useLoadScript({\n          googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n          libraries,\n        });\n    if (loaderror) return \"Where's my Coffee!! - be\";\n    if(!isLoaded) return \"Finding your coffee\";\n\n\n    const distCoffee = (distance.slice(0,-2))\n    const intCoffee = Number(\"distCoffee\")\n    console.log(typeof(intCoffee))\n    console.log(intCoffee)\n    console.log(typeof handleChange);\n    const coffeeDistance = { intCoffee } / ({ handleChange } + 1);\n        async function coffeeStops() {\n          await calculatePath;\n          if (distance > 0) {\n            return coffeeDistance;\n            console.log({distance});\n            console.log(coffeeDistance);\n            \n          }\n        }\n    async function calculatePath(){\n       \n        if (originRef.current.value === '' || destinationRef.current.value === ''){\n            return\n        }\n        \n        // eslint-disable-next-line no-undef\n        const directionsService = new google.maps.DirectionsService()\n        const results = await directionsService.route({\n          origin: originRef.current.value,\n          destination: destinationRef.current.value,\n          // eslint-disable-next-line no-undef\n          travelMode: google.maps.TravelMode.DRIVING,\n        \n        });\n            \n        setDirectionsResponse(results)\n        setDistance(results.routes[0].legs[0].distance.text)\n        setDuration(results.routes[0].legs[0].duration.text)\n        console.log(coffeeDistance)\n        console.log(typeof(distance))\n        \n\n    }\n\n\n\nreturn (\n  <div>\n    <div>\n      <Autocomplete>\n        <input type=\"text\" placeholder=\"Origin\" ref={originRef} />\n      </Autocomplete>\n    </div>\n    <div>\n      <Autocomplete>\n        <input type=\"text\" placeholder=\"Destination\" ref={destinationRef} />\n      </Autocomplete>\n    </div>\n    <div>\n        <button type='submit' onClick={calculatePath}>Find your Buzzed Path</button>\n    </div>\n    <div>\n        <p>Distance: {distance}</p>\n        \n        <p>Duration: {duration}</p>\n        <p>{}</p>\n        \n    </div>\n    <div className=\"coffeemap\">\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={8}\n        center={center}\n      ><Marker position={center}/>\n        {directionsResponse && (\n            <DirectionsRenderer directions = {directionsResponse}/>\n        )}</GoogleMap>\n    </div>\n  </div>\n);\n}\n"]},"metadata":{},"sourceType":"module"}