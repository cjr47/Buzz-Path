[{"/Users/micahberman/Documents/momentum/buzzpath/src/index.js":"1","/Users/micahberman/Documents/momentum/buzzpath/src/App.js":"2","/Users/micahberman/Documents/momentum/buzzpath/src/components/modal.js":"3","/Users/micahberman/Documents/momentum/buzzpath/src/components/coffeeslider.js":"4","/Users/micahberman/Documents/momentum/buzzpath/src/components/map.js":"5"},{"size":169,"mtime":1651007715211,"results":"6","hashOfConfig":"7"},{"size":1651,"mtime":1651133798472,"results":"8","hashOfConfig":"7"},{"size":874,"mtime":1651007715210,"results":"9","hashOfConfig":"7"},{"size":1112,"mtime":1651007715208,"results":"10","hashOfConfig":"7"},{"size":5728,"mtime":1651168480397,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5wysxb",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/micahberman/Documents/momentum/buzzpath/src/index.js",[],[],"/Users/micahberman/Documents/momentum/buzzpath/src/App.js",["30","31","32","33"],[],"import Modal from './components/modal.js'\nimport \"./App.css\";\nimport Gmap from './components/map.js'\nimport CoffeeSlider from './components/coffeeslider.js'\nimport React, { useState } from 'react'\n/* import onChangeSlider from \"./components/slidervalue.js\";\nimport rangeValue from \"./components/slidervalue.js\";\nimport setShow from \"./components/slidervalue.js\";\nimport show from \"./components/slidervalue.js\"; */\n/* import onChangeSlider from \"./components/slidervalue.js\"\n */\n/* import ModalPopUp from './components/modalpopup.js' */\n\n\nconst center = { lat: 35.9940, lng: -78.8986 };\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  position: \"absolute\",\n};\n\n\n\nfunction App() {\n\n\n  const onChangeSlider = (e) => {\n    console.log(rangeValue);\n    setRangeValue(parseInt(e.target.value, 10));\n    if (rangeValue > 18) {\n      let openModal = setShow(true);\n    }\n  };\n\n \n  const [rangeValue, setRangeValue] = useState(10);\n  const [show, setShow, isOpen] = useState(false);\n\nreturn (\n  <div>\n    \n    <div>\n      <CoffeeSlider\n        \n        step={1}\n        defaultValue={1}\n        value={rangeValue}\n        onChangeValue={onChangeSlider}\n      />\n    </div>\n    <div className=\"modal-button\">\n      <button onClick={() => setShow(true)}>Coffee Addiction?</button>\n      <Modal onClose={() => setShow(false)} show={show} />\n    </div>\n      \n    <div className=\"gmaps\">\n      <Gmap\n        mapContainerStyle={mapContainerStyle}\n        zoom={8}\n        center={center}\n        resetBoundsOnResize={true}\n        rangeValue={rangeValue}\n      ></Gmap>\n    </div>\n  </div>\n);\n}\n\nexport default App; {}",["34","35"],"/Users/micahberman/Documents/momentum/buzzpath/src/components/modal.js",["36"],[],"/Users/micahberman/Documents/momentum/buzzpath/src/components/coffeeslider.js",["37","38","39","40","41","42"],[],"/Users/micahberman/Documents/momentum/buzzpath/src/components/map.js",["43","44","45"],[],"/* global google */\nimport {\n  useLoadScript,\n  GoogleMap,\n  Autocomplete,\n  DirectionsRenderer,\n  Marker,\n } from \"@react-google-maps/api\";\nimport React, { useState, useRef } from 'react'\nimport \"./maps.css\"\n\n \n\n\n\nconst center = {lat: 35.9940,lng: -78.8986}\nconst libraries = [\"places\"]\nconst mapContainerStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"visible\",\n    resetBoundsOnResize: \"true\",\n}\n\n\nexport default function Gmap ({rangeValue}) {\n    \n                const [map, setMap] = useState(null);\n                const [directionsResponse, setDirectionsResponse] =\n                  useState(null);\n                const [distance, setDistance] = useState(\"\");\n                const [duration, setDuration] = useState(\"\");\n                \n                \n                const originRef = useRef();\n                const destinationRef = useRef();\n    const { isLoaded, loaderror } = useLoadScript({\n          googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n          libraries,\n        });\n    if (loaderror) return \"Where's my Coffee!! - be\";\n    if(!isLoaded) return \"Finding your coffee\";\n\n\n    const distCoffee = (distance.slice(0,-2))\n    const intCoffee = Number(distCoffee)\n/* Micah's Code */  \n      function findLegsLength(){\n      console.log(rangeValue)     \n      console.log(directionsResponse.routes[0].legs[0].distance.value);\n\n      const tripDistance = directionsResponse.routes[0].legs[0].distance.value\n      const stops = 2\n      const newLegLength = tripDistance / (stops + 1)\n      \n      console.log(newLegLength)\n      console.log('DIRSRESPONSE:', directionsResponse);\n      return newLegLength;\n      }\n\n   \n\n/*End Micah's Code */\n/* Other BS Code */\n/* variables pulled from OG HTML file\nvar renderer=new google.maps.DirectionsRenderer(route.rendering);\nconst dirs = direction.renderer.getDirections();\nconst route = dirs.routes[0];*/\n\nasync function getMarkers () { \n  console.log('Get Markers Gets Called')       \n  let markers=[],\n      geo=google.maps.geometry.spherical,\n      path=directionsResponse.routes[0].overview_path,\n      point=path[0],\n      distance=0,\n      leg,\n      overflow,\n      markerPosition,\n      distanceBetweenStops = findLegsLength(),\n      markerOptions = {\n        icon: 'http://labs.google.com/ridefinder/images/mm_20_blue.png',\n      };\n      \n    \n    // For each point on the path\n    path.forEach(pointOnPath => {\n      // Set the distance of the leg to (previous point distances) + (distance from last point to current point)\n      leg = Math.round(geo.computeDistanceBetween(point, pointOnPath));\n      let d1 = distance + 0\n      distance += leg;        \n      overflow = distanceBetweenStops - (d1 % distanceBetweenStops);\n      \n      // Once the leg is >= to the desired distance between points, create the new marker and push it to markers\n      if(distance >= distanceBetweenStops && leg >= overflow) {\n          markerPosition = geo.computeOffset(point,overflow,geo.computeHeading(point,pointOnPath));\n          markerOptions.position = markerPosition;\n          markers.push(new google.maps.Marker(markerOptions));\n          distance -= distanceBetweenStops;\n      }\n      point = pointOnPath\n    });\n/* latlngs of markers*/\n  markers.forEach(marker => console.log(marker.position.lat(), marker.position.lng()))\n  console.log('PATH:', path);\n  return markers;}\n\n  getMarkers()\n /*End Other BS Code */\n const waypts = [];\n\n\n const testingWaypoints = '220 Red Oak Ave, Durham, NC 27707, USA'\n      \n      \n\n      \n   \n   \n /* async function coffeeStops({rangeValue}) { */\n           const coffeeDistance = intCoffee /(rangeValue); \n\n        /*   await calculatePath;\n          if (distance > 0) {\n            console.log(coffeeDistance)\n            return coffeeDistance;\n            console.log({distance}); */\n\n\n\n          \n    async function calculatePath(){\n       \n        if (originRef.current.value === '' || destinationRef.current.value === ''){\n            return\n        }\n        \n        // eslint-disable-next-line no-undef\n        const directionsService = new google.maps.DirectionsService()\n        const results = await directionsService.route({\n          origin: originRef.current.value,\n          destination: destinationRef.current.value,\n          // eslint-disable-next-line no-undef\n          travelMode: google.maps.TravelMode.DRIVING,\n          waypoints:[\n            {\n              location: testingWaypoints,\n              stopover: true\n            },\n          ]\n          \n        });\n            \n        setDirectionsResponse(results)\n        setDistance(results.routes[0].legs[0].distance.text)\n        setDuration(results.routes[0].legs[0].duration.text)\n        \n        /* console.log(coffeeDistance) */\n        \n        \n\n    }\n\n\n\nreturn (\n  <div>\n    <div>\n      <Autocomplete>\n        <input type=\"text\" placeholder=\"Origin\" ref={originRef} />\n      </Autocomplete>\n    </div>\n    <div>\n      <Autocomplete>\n        <input type=\"text\" placeholder=\"Destination\" ref={destinationRef} />\n      </Autocomplete>\n    </div>\n    \n    <div>\n        <button type='submit' onClick={calculatePath}>Find your Buzzed Path</button>\n    </div>\n    <div>\n        <p>Distance: {distance}</p>\n        \n        <p>Duration: {duration}</p>\n        <p>Miles per Coffee: {coffeeDistance}</p>\n{/*         <p>Miles per Coffee: {intCoffee/rangeValue}</p>\n */}        \n    </div>\n    <div className=\"coffeemap\">\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={8}\n        center={center}\n      ><Marker position={center}/>\n        {directionsResponse && (\n            <DirectionsRenderer directions = {directionsResponse}/>\n        )}</GoogleMap>\n    </div>\n  </div>\n);\n}\n",{"ruleId":"46","severity":1,"message":"47","line":16,"column":7,"nodeType":"48","messageId":"49","endLine":16,"endColumn":16},{"ruleId":"46","severity":1,"message":"50","line":32,"column":11,"nodeType":"48","messageId":"49","endLine":32,"endColumn":20},{"ruleId":"46","severity":1,"message":"51","line":38,"column":25,"nodeType":"48","messageId":"49","endLine":38,"endColumn":31},{"ruleId":"52","severity":1,"message":"53","line":70,"column":21,"nodeType":"54","messageId":"55","endLine":70,"endColumn":23},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":21,"column":13,"nodeType":"62","messageId":"63","endLine":21,"endColumn":144,"fix":"64"},{"ruleId":"46","severity":1,"message":"65","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":33},{"ruleId":"46","severity":1,"message":"66","line":1,"column":35,"nodeType":"48","messageId":"49","endLine":1,"endColumn":44},{"ruleId":"46","severity":1,"message":"67","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":13},{"ruleId":"46","severity":1,"message":"68","line":10,"column":9,"nodeType":"48","messageId":"49","endLine":10,"endColumn":12},{"ruleId":"46","severity":1,"message":"69","line":11,"column":9,"nodeType":"48","messageId":"49","endLine":11,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":15,"column":9,"nodeType":"48","messageId":"49","endLine":15,"endColumn":18},{"ruleId":"46","severity":1,"message":"70","line":28,"column":24,"nodeType":"48","messageId":"49","endLine":28,"endColumn":27},{"ruleId":"46","severity":1,"message":"71","line":28,"column":29,"nodeType":"48","messageId":"49","endLine":28,"endColumn":35},{"ruleId":"46","severity":1,"message":"72","line":110,"column":8,"nodeType":"48","messageId":"49","endLine":110,"endColumn":14},"no-unused-vars","'libraries' is assigned a value but never used.","Identifier","unusedVar","'openModal' is assigned a value but never used.","'isOpen' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"75","text":"76"},"'useRef' is defined but never used.","'useEffect' is defined but never used.","'Modal' is defined but never used.","'min' is assigned a value but never used.","'max' is assigned a value but never used.","'map' is assigned a value but never used.","'setMap' is assigned a value but never used.","'waypts' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[613,613]," rel=\"noreferrer\""]